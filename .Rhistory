)
empty <- fromJSON("http://www.d-portal.org/q?from=act%2Ctrans%2Csector&limit=-1&select=sector_code%2Csum_of_percent_of_trans_usd&groupby=sector_code&trans_code=D%7CE&trans_day_gteq=2014-01-01&trans_day_lt=2015-01-01&reporting_ref=GB-1&view=publisher_sectors&_=1441789807497")[[1]][0,]
empty$year <- double(0)
empty$donor <- character(0)
data <- foreach(i=1:length(gbs),.packages=c("jsonlite")
,.combine=rbind) %do% {
gb <- gbs[i]
statsUrl <- paste0("http://www.d-portal.org/q?select=stats&from=act&reporting_ref=",gb,"&view=publisher&_=1441790527948")
donorname <- fromJSON(statsUrl)[[1]]["MAX(reporting)"][1,1]
message(donorname)
url2013 <- paste0("http://www.d-portal.org/q?from=act%2Ctrans%2Csector&limit=-1&select=sector_code%2Csum_of_percent_of_trans_usd&groupby=sector_code&trans_code=D%7CE&trans_day_gteq=2013-01-01&trans_day_lt=2014-01-01&reporting_ref=",gb,"&view=publisher_sectors&_=1441789807495")
dat2013 <- fromJSON(url2013)[[1]]
dat2013$year <- 2013
dat2013$donor <- donorname
if(is.null(nrow(dat2013))){
dat2013 <- empty
}
url2014 <- paste0("http://www.d-portal.org/q?from=act%2Ctrans%2Csector&limit=-1&select=sector_code%2Csum_of_percent_of_trans_usd&groupby=sector_code&trans_code=D%7CE&trans_day_gteq=2014-01-01&trans_day_lt=2015-01-01&reporting_ref=",gb,"&view=publisher_sectors&_=1441789807497")
dat2014 <- fromJSON(url2014)[[1]]
dat2014$year <- 2014
dat2014$donor <- donorname
if(is.null(nrow(dat2014))){
dat2014 <- empty
}
url2015 <- paste0("http://www.d-portal.org/q?from=act%2Cbudget%2Csector&limit=-1&select=sector_code%2Csum_of_percent_of_budget_usd&budget_priority=1&groupby=sector_code&budget_day_end_gteq=2015-01-01&budget_day_end_lt=2016-01-01&reporting_ref=",gb,"&view=publisher_sectors&_=1441789807501")
dat2015 <- fromJSON(url2015)[[1]]
dat2015$year <- 2015
dat2015$donor <- donorname
names(dat2015)[2] <- "sum_of_percent_of_trans_usd"
if(is.null(nrow(dat2015))){
dat2015 <- empty
}
dat <- rbind(dat2013,dat2014,dat2015)
return(dat)
}
View(data)
unique(data$donor)
ug_leaflet("country-year","uganda-gov-spend-pp",2015,"value",5,diRamp("purple"))
###Function########################################################################################
###Thanks to Kyle Walker, http://rpubs.com/walkerke/wdi_leaflet
#install.packages('rgdal')
#install.packages('devtools')
#install.packages('plyr')
#library(devtools)
#devtools::install_github("rstudio/leaflet")
library(rgdal)
library(leaflet)
library(plyr)
windows <- TRUE
if(windows){pathpre<-"C:"}else{pathpre<-"~"}
### Function to create a Leaflet interactive map.
diRamp <- function(colorText1,colorText2=NA,colorText3=NA){
colorRef <- list("red"="#BA0C2F")
colorRef <- c(colorRef,"white"="#FFFFFF")
colorRef <- c(colorRef,"black"="#000000")
colorRef <- c(colorRef,"orange"="#EA7600")
colorRef <- c(colorRef,"purple"="#93328E")
colorRef <- c(colorRef,"blue"="#1B365D")
colorRef <- c(colorRef,"lightblue"="#0095CB")
colorRef <- c(colorRef,"yellow"="#B7BF10")
colorRef <- c(colorRef,"darkred"=rgb(96, 6, 24,1,maxColorValue=255))
colorRef <- c(colorRef,"pink"=rgb(251, 197, 208,1,maxColorValue=255))
colorRef <- c(colorRef,"blue4"=rgb(27, 54, 93,1,maxColorValue=255))
colorRef <- c(colorRef,"blue3"=rgb(73, 94, 125,1,maxColorValue=255))
colorRef <- c(colorRef,"blue2"=rgb(118, 134, 158,1,maxColorValue=255))
colorRef <- c(colorRef,"blue1"=rgb(164, 175, 190,1,maxColorValue=255))
colorRef <- c(colorRef,"blue0"=rgb(209, 215, 223,1,maxColorValue=255))
if(!is.na(colorText2)){
if(!is.na(colorText3)){
color1 <- colorRef[[colorText1]]
if(is.null(color1)){color1 <- colorText1}
color2 <- colorRef[[colorText2]]
if(is.null(color2)){color2 <- colorText2}
color3 <- colorRef[[colorText3]]
if(is.null(color3)){color3 <- colorText3}
colorRamp(c(color1,color2,color3), interpolate="linear")
}else{
color1 <- colorRef[[colorText1]]
if(is.null(color1)){color1 <- colorText1}
color2 <- colorRef[[colorText2]]
if(is.null(color2)){color2 <- colorText2}
colorRamp(c(color1,color2), interpolate="linear")
}
}else{
color1 <- colorRef[["white"]]
color2 <- colorRef[[colorText1]]
if(is.null(color2)){color2 <- colorText2}
colorRamp(c(color1,color2), interpolate="linear")
}
}
ug_leaflet <- function(series,indicator, year = NA, value = "value", classes = 5, colors = "Blues") {
districts <- readOGR(dsn = paste0(pathpre,"/git/digital-platform/shape-files/uganda/uganda.shp"),
layer = "uganda",
encoding = "UTF-8",
verbose = FALSE)
datPath <- paste(paste0(pathpre,"/git/digital-platform/"),series,"/",indicator,".csv",sep="")
dat <- read.csv(datPath, header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE,row.names=NULL)
if(!is.na(year)){
dat <- dat[which(dat$year==year),]
}
keep <- c("id","year",indicator)
names(dat)[names(dat) == value] <- indicator
dat <- dat[keep]
districts2 <- merge(districts,
dat,
by = c("id"),
sort = FALSE)
districts2$district <- districts2$name
if(is.numeric(classes)){
if(length(classes)==1){
pal <- colorQuantile(colors, NULL, n = classes)
}else{
levels <- classes[order(classes)]
indDat <- dat[[indicator]]
indDat <- indDat[which(!is.na(indDat))]
indMin <- min(indDat)
indMax <- max(indDat)
if(levels[1]>indMin){
levels <- c(indMin,levels)
}
if(levels[length(levels)]<indMax){
levels <- c(levels,indMax)
}
pal <- colorBin(colors, c(indMin,indMax) , bins = levels)
}
}else{
conceptPath <- paste0(pathpre,"/git/digital-platform/concepts.csv")
concepts <- read.csv(conceptPath, header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
range <- concepts[which(concepts$id==indicator&concepts$series=="country-year"),]$range
if(!is.na(range)){
classes <- as.numeric(strsplit(range,",")[[1]])
levels <- classes[order(classes)]
indDat <- dat[[indicator]]
indDat <- indDat[which(!is.na(indDat))]
indMin <- min(indDat)
indMax <- max(indDat)
if(levels[1]>indMin){
levels <- c(indMin,levels)
}
if(levels[length(levels)]<indMax){
levels <- c(levels,indMax)
}
pal <- colorBin(colors, c(indMin,indMax) , bins = levels)
}else{
warning("Error reading range from concepts.csv. Choosing 5 chucks instead.")
pal <- colorQuantile(colors, NULL, n = 5)
}
}
popup <- paste0("<strong>District: </strong>",
districts2$district,
"<br><strong>",
indicator,
", ",
as.character(districts2$year),
": </strong>",
districts2[[indicator]])
stamen_tiles <- "http://{s}.tile.stamen.com/toner-lite/{z}/{x}/{y}.png"
stamen_attribution <- 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, under <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="http://openstreetmap.org">OpenStreetMap</a>, under <a href="http://www.openstreetmap.org/copyright">ODbL</a>.'
val<-districts2[[indicator]]
color<- pal(districts2[[indicator]])
legend <- data.frame(val,color,stringsAsFactors=FALSE)
legend <- ddply(legend,.(color),summarize,from=min(val),to=max(val),count=length(val),stringsAsFactors=FALSE)
legend <- legend[order(legend$from),]
legend$from.to <- paste(as.character(legend$from),as.character(legend$to),sep=" - ")
legend<- legend[c("color","from.to","count")]
for(i in 1:length(legend$from.to)){
if(legend$from.to[i]=="NA - NA"){
legend$from.to[i]="NA"
}
}
bp <- barplot(legend$count,
legend.text=legend$from.to,
beside=FALSE,
col=legend$color,
main = indicator)
text(bp, 0, round(legend$count, 1),cex=1,pos=3)
leaflet(data = districts2) %>%
#addTiles(urlTemplate = stamen_tiles,
#         attribution = stamen_attribution) %>%
setView(32, 1, zoom = 6) %>%
addPolygons(fillColor = ~pal(districts2[[indicator]]),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1,
popup = popup)
}
##Syntax is:
#ug_leaflet(series,indicator,year,value,classes,colorRamp)
#Map appears in viewer, legend appears in plots along with count of data in those bins
#DPR
ug_leaflet("country-year","uganda-gov-spend-pp",2015,"value",5,diRamp("purple"))
ug_leaflet("country-year","uganda-gov-spend-pp",2015,"value",6,diRamp("purple"))
ug_leaflet("country-year","uganda-gov-spend-pp",2014,"value",5,diRamp("purple"))
ug_leaflet("country-year","uganda-gov-spend-pp",2014,"value",c(20,25,30,35),diRamp("purple"))
setwd("C:/git/alexm-util/DevInit/Uganda/Spotlight/")
data <- read.csv("Revenue-12-16.csv")
unique(data$year)
data <- read.csv("Revenue-12-16.csv",as.is=TRUE)
unique(data$year)
names(data)
length(unique(rev16$District))
setwd("C:/git/alexm-util/DevInit/Uganda/Spotlight/")
data <- read.csv("Revenue-12-16.csv",as.is=TRUE)
rev16 <- subset(data,year=="2015/16 Proposed Budget")
rev15 <- subset(data,year=="2014/15 Proposed Budget")
rev14 <- subset(data,year=="2013/14 Proposed Budget")
length(unique(rev16$District))
length(unique(rev15$District))
length(unique(rev14$District))
unique(rev15$District)
setwd("C:/git/alexm-util/DevInit/Uganda/Spotlight/")
data <- read.csv("Revenue-12-16.csv",as.is=TRUE)
rev16 <- subset(data,year=="2015/16 Proposed Budget")
rev15 <- subset(data,year=="2014/15 Proposed Budget")
rev14 <- subset(data,year=="2013/14 Proposed Budget")
length(unique(rev16$District))
length(unique(rev15$District))
length(unique(rev14$District))
unique(rev15$District)
unique(rev14$District)
setwd("C:/git/alexm-util/DevInit/Uganda/Spotlight/")
data <- read.csv("Revenue-12-16.csv",as.is=TRUE)
rev16 <- subset(data,year=="2015/16 Proposed Budget")
rev15 <- subset(data,year=="2014/15 Proposed Budget")
rev14 <- subset(data,year=="2013/14 Proposed Budget")
length(unique(rev16$District))
length(unique(rev15$District))
length(unique(rev14$District))
path<- "C:/git/digital-platform"
setwd(path)
df <- read.csv("./country-year/uganda-finance.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
mult <- read.csv("./reference/current-ncu-to-constant-2012-usd-cy.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value <- df$value.ncu
}else{
df$value.ncu <- df$value
}
for(i in 1:nrow(df)){
row = df[i,]
id = "UG"
year = row[2][1,1]
value = row[8][1,1]
multiplier = mult[which(mult$id==id),]
multiplier = multiplier[which(multiplier$year==year),3]
if(length(multiplier)<=0)
{
if(year!=2020){print(paste("No multiplier for:",id,year))}
df[i,8] = NA
}
else
{
value = value*multiplier
df[i,8] = value
}
}
path<- "C:/git/digital-platform"
setwd(path)
df <- read.csv("./country-year/uganda-finance.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
mult <- read.csv("./reference/current-ncu-to-constant-2012-usd-cy.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value <- df$value.ncu
}else{
df$value.ncu <- df$value
}
for(i in 1:nrow(df)){
row = df[i,]
id = "UG"
year = row[2][1,1]
value = row[8][1,1]
multiplier = mult[which(mult$id==id),]
multiplier = multiplier[which(multiplier$year==year),3]
if(length(multiplier)<=0)
{
if(year!=2020){print(paste("No multiplier for:",id,year))}
df[i,8] = NA
}
else
{
value = value*multiplier
df[i,8] = value
}
}
names(df)[names(df) == "value.ncu"] <- "value-ncu"
write.csv(df,"./country-year/uganda-finance.csv",row.names=FALSE,na="")
View(data)
View(df)
View(data)
View(df)
unique(df$year)
typeof(1)
typeof(df$year)
path<- "C:/git/digital-platform"
setwd(path)
df <- read.csv("./country-year/uganda-finance.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
mult <- read.csv("./reference/current-ncu-to-constant-2012-usd-cy.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value <- df$value.ncu
}else{
df$value.ncu <- df$value
}
for(i in 1:nrow(df)){
row = df[i,]
id = "UG"
year = row[2][1,1]
value = row[8][1,1]
multiplier = mult[which(mult$id==id),]
multiplier = multiplier[which(multiplier$year==year),3]
if(length(multiplier)<=0)
{
if(year!=2020){print(paste("No multiplier for:",id,year))}
df[i,8] = NA
}
else
{
value = value*multiplier
df[i,8] = value
}
}
names(df)[names(df) == "value.ncu"] <- "value-ncu"
write.csv(df,"./country-year/uganda-finance.csv",row.names=FALSE,na="")
View(row)
path<- "C:/git/digital-platform"
setwd(path)
df <- read.csv("./country-year/uganda-finance.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE)
mult <- read.csv("./reference/current-ncu-to-constant-2012-usd-cy.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value <- df$value.ncu
}else{
df$value.ncu <- df$value
}
for(i in 1:nrow(df)){
row = df[i,]
id = "UG"
year = row[2][1,1]
value = row[8][1,1]
multiplier = mult[which(mult$id==id),]
multiplier = multiplier[which(multiplier$year==year),3]
if(length(multiplier)<=0)
{
if(year!=2020){print(paste("No multiplier for:",id,year))}
df[i,8] = NA
}
else
{
value = value*multiplier
df[i,8] = value
}
}
names(df)[names(df) == "value.ncu"] <- "value-ncu"
write.csv(df,"./country-year/uganda-finance.csv",row.names=FALSE,na="")
warnings()
path<- "C:/git/digital-platform"
setwd(path)
df <- read.csv("./country-year/uganda-finance.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
mult <- read.csv("./reference/current-ncu-to-constant-2012-usd-cy.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value <- df$value.ncu
}else{
df$value.ncu <- df$value
}
for(i in 1:nrow(df)){
row = df[i,]
id = "UG"
year = row[2][1,1]
value = row[8][1,1]
multiplier = mult[which(mult$id==id),]
multiplier = multiplier[which(multiplier$year==year),3]
if(length(multiplier)<=0)
{
if(year!=2020){print(paste("No multiplier for:",id,year))}
df[i,8] = NA
}
else
{
value = value*multiplier
df[i,8] = value
}
}
names(df)[names(df) == "value.ncu"] <- "value-ncu"
write.csv(df,"./country-year/uganda-finance.csv",row.names=FALSE,na="")
path<- "C:/git/digital-platform"
setwd(path)
df <- read.csv("./country-year/uganda-finance.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
mult <- read.csv("./reference/current-ncu-to-constant-2012-usd-cy.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value <- df$value.ncu
}else{
df$value.ncu <- df$value
}
for(i in 1:nrow(df)){
row = df[i,]
id = "UG"
year = row[2][1,1]
value = row[8][1,1]
multiplier = mult[which(mult$id==id),]
multiplier = multiplier[which(multiplier$year==year),3]
if(length(multiplier)<=0)
{
if(year!=2020){print(paste("No multiplier for:",id,year))}
df[i,8] = NA
}
else
{
value = value*multiplier
df[i,8] = value
}
}
names(df)[names(df) == "value.ncu"] <- "value-ncu"
write.csv(df,"./country-year/uganda-finance.csv",row.names=FALSE,na="")
path<- "C:/git/digital-platform"
setwd(path)
df <- read.csv("./country-year/uganda-finance.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
mult <- read.csv("./reference/current-ncu-to-constant-2012-usd-cy.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value <- df$value.ncu
}else{
df$value.ncu <- df$value
}
for(i in 1:nrow(df)){
row = df[i,]
id = "UG"
year = row[2][1,1]
value = row[8][1,1]
multiplier = mult[which(mult$id==id),]
multiplier = multiplier[which(multiplier$year==year),3]
if(length(multiplier)<=0)
{
if(year!=2020){print(paste("No multiplier for:",id,year))}
df[i,8] = NA
}
else
{
value = value*multiplier
df[i,8] = value
}
}
names(df)[names(df) == "value.ncu"] <- "value-ncu"
write.csv(df,"./country-year/uganda-finance.csv",row.names=FALSE,na="")
path<- "C:/git/digital-platform"
setwd(path)
df <- read.csv("./country-year/uganda-finance.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
mult <- read.csv("./reference/current-ncu-to-constant-2012-usd-cy.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value <- df$value.ncu
}else{
df$value.ncu <- df$value
}
for(i in 1:nrow(df)){
row = df[i,]
id = "UG"
year = row[2][1,1]
value = row[8][1,1]
multiplier = mult[which(mult$id==id),]
multiplier = multiplier[which(multiplier$year==year),3]
if(length(multiplier)<=0)
{
if(year!=2020){print(paste("No multiplier for:",id,year))}
df[i,8] = NA
}
else
{
value = value*multiplier
df[i,8] = value
}
}
names(df)[names(df) == "value.ncu"] <- "value-ncu"
write.csv(df,"./country-year/uganda-finance.csv",row.names=FALSE,na="")
number(1)
double(1)
double(10)
as.number("1")
as.double("1")
path<- "C:/git/digital-platform"
setwd(path)
df <- read.csv("./country-year/uganda-finance.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
mult <- read.csv("./reference/current-ncu-to-constant-2012-usd-cy.csv", header = TRUE,sep=",",na.strings="",check.names=FALSE,stringsAsFactors=FALSE)
if("value-ncu" %in% colnames(df)){
names(df)[names(df)=="value-ncu"] <- "value.ncu"
df$value.ncu <- as.double(df$value.ncu)
df$value <- df$value.ncu
}else{
df$value <- as.double(df$value)
df$value.ncu <- df$value
}
for(i in 1:nrow(df)){
row = df[i,]
id = "UG"
year = row[2][1,1]
value = row[8][1,1]
multiplier = mult[which(mult$id==id),]
multiplier = multiplier[which(multiplier$year==year),3]
if(length(multiplier)<=0)
{
if(year!=2020){print(paste("No multiplier for:",id,year))}
df[i,8] = NA
}
else
{
value = value*multiplier
df[i,8] = value
}
}
names(df)[names(df) == "value.ncu"] <- "value-ncu"
write.csv(df,"./country-year/uganda-finance.csv",row.names=FALSE,na="")
