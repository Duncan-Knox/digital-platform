#Provide meta-data from concepts.csv
write.csv(concept,paste(basename,"-metadata",".csv",sep=""),row.names=FALSE,na="")
if(basename %in% names(refMap)){
refNames = strsplit(refMap[[basename]],",")
for(j in 1:length(refNames)){
refBaseName = refNames[[j]]
refName = paste(refPath,refBaseName,".csv",sep="")
#Copy the reference files
file.copy(refName,paste(refBaseName,".csv",sep=""))
}
}
setwd(wd)
}
#install.packages('reshape')
library(reshape)
wd <- "C:/git/digital-platform/user-data/"
setwd(wd)
#Delete everything in user-data
unlink(dir(wd, full.names = TRUE),recursive=TRUE)
#List all files in country-year
filenames <- list.files("C:/git/digital-platform/country-year/", pattern="*.csv", full.names=TRUE)
#Define references and mapping
refPath = "C:/git/digital-platform/reference/"
conceptPath = "C:/git/digital-platform/concepts.csv"
concepts <- read.csv(conceptPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
refMap <- list("domestic"="budget-type,domestic-budget-level")
refMap <- c(refMap,"domestic-sectors"="budget-type,domestic-budget-level")
refMap <- c(refMap,"intl-flows-donors"="flow-type,flow-name")
refMap <- c(refMap,"intl-flows-recipients"="flow-type,flow-name")
refMap <- c(refMap,"largest-intl-flow"="largest-intl-flow")
refMap <- c(refMap,"fragile-states"="fragile-states")
refMap <- c(refMap,"long-term-debt"="debt-flow,destination-institution-type,creditor-type,creditor-institution,financing-type")
refMap <- c(refMap,"oda"="sector,bundle,channel")
refMap <- c(refMap,"oof"="sector,oof-bundle,channel")
#Iterate through files, reading them in
for (i in 1:length(filenames))
{
data <- read.csv(filenames[i], header = TRUE,sep=",",na.strings="",check.names=FALSE)
names <- colnames(data)
basename = substr(basename(filenames[i]), 1, nchar(basename(filenames[i])) - 4)
fwd = paste(wd,basename,sep="/")
#Create a folder for each csv
dir.create(fwd)
setwd(fwd)
concept = concepts[which(concepts$id==basename),]
#If we have an ID and a year to widen it by, provide wide
if("id" %in% names & "year" %in% names)  {
wdata <- reshape(data,idvar="id",timevar="year",direction="wide")
write.csv(wdata,paste(basename,"-wide",".csv",sep=""),row.names=FALSE,na="")
}
#Copy the original CSV
file.copy(filenames[i],paste(basename,".csv",sep=""))
#Reference folder
rwd = paste(fwd,"reference",sep="/")
dir.create(rwd)
setwd(rwd)
#Provide meta-data from concepts.csv
write.csv(concept,paste(basename,"-metadata-wide",".csv",sep=""),row.names=FALSE,na="")
write.table(t(concept),paste(basename,"-metadata-long",".csv",sep=""),col.names=FALSE,na="",sep=",")
if(basename %in% names(refMap)){
refNames = strsplit(refMap[[basename]],",")
for(j in 1:length(refNames)){
refBaseName = refNames[[j]]
refName = paste(refPath,refBaseName,".csv",sep="")
#Copy the reference files
file.copy(refName,paste(refBaseName,".csv",sep=""))
}
}
setwd(wd)
}
#install.packages('reshape')
library(reshape)
wd <- "C:/git/digital-platform/user-data/"
setwd(wd)
#Delete everything in user-data
unlink(dir(wd, full.names = TRUE),recursive=TRUE)
#List all files in country-year
filenames <- list.files("C:/git/digital-platform/country-year/", pattern="*.csv", full.names=TRUE)
#Define references and mapping
refPath = "C:/git/digital-platform/reference/"
conceptPath = "C:/git/digital-platform/concepts.csv"
concepts <- read.csv(conceptPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
refMap <- list("domestic"="budget-type,domestic-budget-level")
refMap <- c(refMap,"domestic-sectors"="budget-type,domestic-budget-level")
refMap <- c(refMap,"intl-flows-donors"="flow-type,flow-name")
refMap <- c(refMap,"intl-flows-recipients"="flow-type,flow-name")
refMap <- c(refMap,"largest-intl-flow"="largest-intl-flow")
refMap <- c(refMap,"fragile-states"="fragile-states")
refMap <- c(refMap,"long-term-debt"="debt-flow,destination-institution-type,creditor-type,creditor-institution,financing-type")
refMap <- c(refMap,"oda"="sector,bundle,channel")
refMap <- c(refMap,"oof"="sector,oof-bundle,channel")
#Iterate through files, reading them in
for (i in 1:length(filenames))
{
data <- read.csv(filenames[i], header = TRUE,sep=",",na.strings="",check.names=FALSE)
names <- colnames(data)
basename = substr(basename(filenames[i]), 1, nchar(basename(filenames[i])) - 4)
fwd = paste(wd,basename,sep="/")
#Create a folder for each csv
dir.create(fwd)
setwd(fwd)
concept = concepts[which(concepts$id==basename),]
#If we have an ID and a year to widen it by, provide wide
if("id" %in% names & "year" %in% names)  {
wdata <- reshape(data,idvar="id",timevar="year",direction="wide")
write.csv(wdata,paste(basename,"-wide",".csv",sep=""),row.names=FALSE,na="")
}
#Copy the original CSV
file.copy(filenames[i],paste(basename,".csv",sep=""))
#Reference folder
rwd = paste(fwd,"reference",sep="/")
dir.create(rwd)
setwd(rwd)
#Provide meta-data from concepts.csv
#write.csv(concept,paste(basename,"-metadata-wide",".csv",sep=""),row.names=FALSE,na="")
write.table(t(concept),paste(basename,"-metadata",".csv",sep=""),col.names=FALSE,na="",sep=",")
if(basename %in% names(refMap)){
refNames = strsplit(refMap[[basename]],",")
for(j in 1:length(refNames)){
refBaseName = refNames[[j]]
refName = paste(refPath,refBaseName,".csv",sep="")
#Copy the reference files
file.copy(refName,paste(refBaseName,".csv",sep=""))
}
}
setwd(wd)
}
library(reshape)
wd <- "C:/git/digital-platform/country-year"
donorPath <- paste(wd,"intl-flows-donors.csv",sep="/")
recipPath <- paste(wd,"intl-flows-recipients.csv",sep="/")
setwd(wd)
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
data <- reshape(data,idvar="id",timevar="flow-name",direction="wide")
mdata <- melt(data,varnames=c("id","year","flow-name"))
View(mdata)
View(data)
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
mdata <- melt(data,varnames=c("id","year","flow-name"))
View(mdata)
?melt
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
View(data)
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
mdata <- melt(data,id.vars=c("id","year","flow-name"),measure.vars="value")
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
mdata <- melt(data,id.vars=c("id","year","flow-name"),measure.vars="value")
View(mdata)
?cast
cdata <- cast(mdata, id ~ year ~ flow-name)
cdata <- cast(mdata, id ~ year)
View(cdata)
#install.packages('reshape')
library(reshape)
wd <- "C:/git/digital-platform/user-data/"
setwd(wd)
#Delete everything in user-data
unlink(dir(wd, full.names = TRUE),recursive=TRUE)
#List all files in country-year
filenames <- list.files("C:/git/digital-platform/country-year/", pattern="*.csv", full.names=TRUE)
#Define references and mapping
refPath = "C:/git/digital-platform/reference/"
conceptPath = "C:/git/digital-platform/concepts.csv"
concepts <- read.csv(conceptPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
refMap <- list("domestic"="budget-type,domestic-budget-level")
refMap <- c(refMap,"domestic-sectors"="budget-type,domestic-budget-level")
refMap <- c(refMap,"intl-flows-donors"="flow-type,flow-name")
refMap <- c(refMap,"intl-flows-recipients"="flow-type,flow-name")
refMap <- c(refMap,"largest-intl-flow"="largest-intl-flow")
refMap <- c(refMap,"fragile-states"="fragile-states")
refMap <- c(refMap,"long-term-debt"="debt-flow,destination-institution-type,creditor-type,creditor-institution,financing-type")
refMap <- c(refMap,"oda"="sector,bundle,channel")
refMap <- c(refMap,"oof"="sector,oof-bundle,channel")
#Iterate through files, reading them in
for (i in 1:length(filenames))
{
data <- read.csv(filenames[i], header = TRUE,sep=",",na.strings="",check.names=FALSE)
names <- colnames(data)
basename = substr(basename(filenames[i]), 1, nchar(basename(filenames[i])) - 4)
fwd = paste(wd,basename,sep="/")
#Create a folder for each csv
dir.create(fwd)
setwd(fwd)
concept = concepts[which(concepts$id==basename),]
#If we have an ID and a year to widen it by, provide wide
if("id" %in% names & "year" %in% names)  {
wdata <- reshape(data,idvar="id",timevar="year",direction="wide")
write.csv(wdata,paste(basename,"-wide",".csv",sep=""),row.names=FALSE,na="")
}
#Copy the original CSV
file.copy(filenames[i],paste(basename,".csv",sep=""))
#Reference folder
rwd = paste(fwd,"reference",sep="/")
dir.create(rwd)
setwd(rwd)
#Provide meta-data from concepts.csv
#write.csv(concept,paste(basename,"-metadata-wide",".csv",sep=""),row.names=FALSE,na="")
write.table(t(concept),paste(basename,"-metadata",".csv",sep=""),col.names=FALSE,na="",sep=",")
if(basename %in% names(refMap)){
refNames = strsplit(refMap[[basename]],",")
for(j in 1:length(refNames)){
refBaseName = refNames[[j]]
refName = paste(refPath,refBaseName,".csv",sep="")
#Copy the reference files
file.copy(refName,paste(refBaseName,".csv",sep=""))
}
}
setwd(wd)
}
#install.packages('reshape')
library(reshape)
wd <- "C:/git/digital-platform/country-year"
donorPath <- paste(wd,"intl-flows-donors.csv",sep="/")
recipPath <- paste(wd,"intl-flows-recipients.csv",sep="/")
setwd(wd)
#Donor
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
mdata <- melt(data,id.vars=c("id","year","flow-name"),measure.vars="value")
cdata <- cast(mdata, id ~ year)
rdata <- reshape(data,idvar="id",timevar="year",direction="wide")
#write.csv(data,paste("name","-wide",".csv",sep=""),row.names=FALSE,na="")
View(data)
View(mdata)
View(cdata)
View(rdata)
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
keep <- c("id","year","flow-name","value")
rdata <- reshape(data[keep],idvar="id",timevar="flow-name",direction="wide")
View(rdata)
rdata <- reshape(data[keep],idvar=c("id","year"),timevar="flow-name",direction="wide")
View(rdata)
#install.packages('reshape')
library(reshape)
wd <- "C:/git/digital-platform/country-year"
donorPath <- paste(wd,"intl-flows-donors.csv",sep="/")
recipPath <- paste(wd,"intl-flows-recipients.csv",sep="/")
setwd(wd)
#Donor
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
keep <- c("id","year","flow-name","value")
rdata <- reshape(data[keep],idvar=c("id","year"),timevar="flow-name",direction="wide")
write.csv(rdata,paste(wd,"intl-flows-donors-wide.csv",sep="/"),row.names=FALSE,na="")
rnames <- names(rdata)
rnames[1]
rnames[2]
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
keep <- c("id","year","flow-name","value")
rdata <- reshape(data[keep],idvar=c("id","year"),timevar="flow-name",direction="wide")
rnames <- names(rdata)
for(i in 1:length(rnames)){
name = rnames[i]
if(substr(name,5))=="value"){
print(name)
for(i in 1:length(rnames)){
name = rnames[i]
if(substr(name,5)=="value"){
print(name)
}
}
rnames <- names(rdata)
for(i in 1:length(rnames)){
name = rnames[i]
if(substr(name,1,5)=="value"){
print(name)
}
}
rnames <- names(rdata)
for(i in 1:length(rnames)){
name = rnames[i]
if(substr(name,1,5)=="value"){
names(rdata)[names(rdata) == name] <- substr(name,5,length(name))
}
}
write.csv(rdata,paste(wd,"intl-flows-donors-wide.csv",sep="/"),row.names=FALSE,na="")
?write.csv
#install.packages('reshape')
library(reshape)
wd <- "C:/git/digital-platform/country-year"
donorPath <- paste(wd,"intl-flows-donors.csv",sep="/")
recipPath <- paste(wd,"intl-flows-recipients.csv",sep="/")
setwd(wd)
#Donor
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
keep <- c("id","year","flow-name","value")
rdata <- reshape(data[keep],idvar=c("id","year"),timevar="flow-name",direction="wide")
rnames <- names(rdata)
for(i in 1:length(rnames)){
name = rnames[i]
if(substr(name,1,5)=="value"){
names(rdata)[names(rdata) == name] <- substr(name,5,length(name))
}
}
file.remove(paste(wd,"intl-flows-donors-wide.csv",sep="/"))
write.csv(rdata,paste(wd,"intl-flows-donors-wide.csv",sep="/"),row.names=FALSE,na="")
#install.packages('reshape')
library(reshape)
wd <- "C:/git/digital-platform/country-year"
donorPath <- paste(wd,"intl-flows-donors.csv",sep="/")
recipPath <- paste(wd,"intl-flows-recipients.csv",sep="/")
setwd(wd)
#Donor
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
keep <- c("id","year","flow-name","value")
rdata <- reshape(data[keep],idvar=c("id","year"),timevar="flow-name",direction="wide")
rnames <- names(rdata)
for(i in 1:length(rnames)){
name = rnames[i]
if(substr(name,1,5)=="value"){
names(rdata)[names(rdata) == name] <- substr(name,5,length(name))
}
}
#file.remove(paste(wd,"intl-flows-donors-wide.csv",sep="/"))
write.csv(rdata,paste(wd,"intl-flows-donors-wide.csv",sep="/"),row.names=FALSE,na="")
name
substr(name,5,length(name))
substr(name,5,5
)
substr(name,1,5)
substr(name,1,6)
substr(name,5,length(name)+5)
length(name)
length(name[0])
length(name[1])
#install.packages('reshape')
library(reshape)
wd <- "C:/git/digital-platform/country-year"
donorPath <- paste(wd,"intl-flows-donors.csv",sep="/")
recipPath <- paste(wd,"intl-flows-recipients.csv",sep="/")
setwd(wd)
#Donor
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
keep <- c("id","year","flow-name","value")
rdata <- reshape(data[keep],idvar=c("id","year"),timevar="flow-name",direction="wide")
rnames <- names(rdata)
for(i in 1:length(rnames)){
name = rnames[i]
if(substr(name,1,5)=="value"){
names(rdata)[names(rdata) == name] <- substr(name,5,nchar(name))
}
}
write.csv(rdata,paste(wd,"intl-flows-donors-wide.csv",sep="/"),row.names=FALSE,na="")
#install.packages('reshape')
library(reshape)
wd <- "C:/git/digital-platform/country-year"
donorPath <- paste(wd,"intl-flows-donors.csv",sep="/")
recipPath <- paste(wd,"intl-flows-recipients.csv",sep="/")
setwd(wd)
#Donor
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
keep <- c("id","year","flow-name","value")
rdata <- reshape(data[keep],idvar=c("id","year"),timevar="flow-name",direction="wide")
rnames <- names(rdata)
for(i in 1:length(rnames)){
name = rnames[i]
if(substr(name,1,5)=="value"){
names(rdata)[names(rdata) == name] <- substr(name,5,nchar(name))
}
}
write.csv(rdata,paste(wd,"intl-flows-donors-wide.csv",sep="/"),row.names=FALSE,na="")
#install.packages('reshape')
library(reshape)
wd <- "C:/git/digital-platform/country-year"
donorPath <- paste(wd,"intl-flows-donors.csv",sep="/")
recipPath <- paste(wd,"intl-flows-recipients.csv",sep="/")
setwd(wd)
#Donor
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
keep <- c("id","year","flow-name","value")
rdata <- reshape(data[keep],idvar=c("id","year"),timevar="flow-name",direction="wide")
rnames <- names(rdata)
for(i in 1:length(rnames)){
name = rnames[i]
if(substr(name,1,5)=="value"){
names(rdata)[names(rdata) == name] <- substr(name,7,nchar(name))
}
}
write.csv(rdata,paste(wd,"intl-flows-donors-wide.csv",sep="/"),row.names=FALSE,na="")
#install.packages('reshape')
library(reshape)
wd <- "C:/git/digital-platform/country-year"
donorPath <- paste(wd,"intl-flows-donors.csv",sep="/")
recipPath <- paste(wd,"intl-flows-recipients.csv",sep="/")
setwd(wd)
#Donor
data <- read.csv(donorPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
keep <- c("id","year","flow-name","value")
rdata <- reshape(data[keep],idvar=c("id","year"),timevar="flow-name",direction="wide")
rnames <- names(rdata)
for(i in 1:length(rnames)){
name = rnames[i]
if(substr(name,1,5)=="value"){
names(rdata)[names(rdata) == name] <- substr(name,7,nchar(name))
}
}
write.csv(rdata,paste(wd,"intl-flows-donors-wide.csv",sep="/"),row.names=FALSE,na="")
#Recipient
data <- read.csv(recipPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
keep <- c("id","year","flow-name","value")
rdata <- reshape(data[keep],idvar=c("id","year"),timevar="flow-name",direction="wide")
rnames <- names(rdata)
for(i in 1:length(rnames)){
name = rnames[i]
if(substr(name,1,5)=="value"){
names(rdata)[names(rdata) == name] <- substr(name,7,nchar(name))
}
}
write.csv(rdata,paste(wd,"intl-flows-recipients-wide.csv",sep="/"),row.names=FALSE,na="")
library(plyr)
library(plyr)
wd <- "C:/git/digital-platform/country-year"
odaPath <- paste(wd,"oda.csv",sep="/")
oofPath <- paste(wd,"oof.csv",sep="/")
setwd(wd)
#oda
odawd <- paste(wd,"oda-donor",sep="/")
dir.create(odawd)
setwd(odawd)
data <- read.csv(odaPath, header = TRUE,sep=",",na.strings="",check.names=FALSE)
keep <- c("id-from","id-to","year","value")
data <- ddply(data[keep],.(id-from,id-to,year),summarize,value=sum(value))
data <- read.csv(odaPath, header = TRUE,sep=",",na.strings="",check.names=TRUE)
keep <- c("id-from","id-to","year","value")
keep <- c("id.from","id.to","year","value")
data <- ddply(data[keep],.(id.from,id.to,year),summarize,value=sum(value))
View(data)
data <- data[order(data$id.from,data$id.to,data$year),]
View(data)
length(data)
nrow(data)
donors <- unique(data$id.from)
data <- read.csv(odaPath, header = TRUE,sep=",",na.strings="",check.names=TRUE,stringsAsFactors=FALSE)
keep <- c("id.from","id.to","year","value")
data <- ddply(data[keep],.(id.from,id.to,year),summarize,value=sum(value))
data <- data[order(data$id.from,data$id.to,data$year),]
donors <- unique(data$id.from)
length(donors)
i = 1
donor = donors[i]
donorData = data[which(data$id.from==donor),]
View(donorData)
paste(odawd,"/oda-",donor,".csv",sep="")
library(plyr)
wd <- "C:/git/digital-platform/country-year"
odaPath <- paste(wd,"oda.csv",sep="/")
oofPath <- paste(wd,"oof.csv",sep="/")
setwd(wd)
#oda
odawd <- paste(wd,"oda-donor",sep="/")
dir.create(odawd)
setwd(odawd)
library(plyr)
wd <- "C:/git/digital-platform/country-year"
odaPath <- paste(wd,"oda.csv",sep="/")
oofPath <- paste(wd,"oof.csv",sep="/")
setwd(wd)
#oda
odawd <- paste(wd,"oda-donor",sep="/")
unlink(odawd,recursive=TRUE)
dir.create(odawd)
setwd(odawd)
data <- read.csv(odaPath, header = TRUE,sep=",",na.strings="",check.names=TRUE,stringsAsFactors=FALSE)
keep <- c("id.from","id.to","year","value")
data <- ddply(data[keep],.(id.from,id.to,year),summarize,value=sum(value))
data <- data[order(data$id.from,data$id.to,data$year),]
donors <- unique(data$id.from)
donorKeep  <- c("id.to","year","value")
i = 1
donor = donors[i]
donorData = data[which(data$id.from==donor),][donorKeep]
names(donorData)[names(donorData) == "id.to"] <- "id"
write.csv(donorData,paste(odawd,"/oda-",donor,".csv",sep=""),row.names=FALSE,na="")
#install.packages('plyr')
library(plyr)
wd <- "C:/git/digital-platform/country-year"
odaPath <- paste(wd,"oda.csv",sep="/")
oofPath <- paste(wd,"oof.csv",sep="/")
#oda
setwd(wd)
odawd <- paste(wd,"oda-donor",sep="/")
unlink(odawd,recursive=TRUE)
dir.create(odawd)
setwd(odawd)
data <- read.csv(odaPath, header = TRUE,sep=",",na.strings="",check.names=TRUE,stringsAsFactors=FALSE)
keep <- c("id.from","id.to","year","value")
data <- ddply(data[keep],.(id.from,id.to,year),summarize,value=sum(value))
data <- data[order(data$id.from,data$id.to,data$year),]
donors <- unique(data$id.from)
donorKeep  <- c("id.to","year","value")
for(i in 1:length(donors)){
donor = donors[i]
donorData = data[which(data$id.from==donor),][donorKeep]
names(donorData)[names(donorData) == "id.to"] <- "id"
write.csv(donorData,paste(odawd,"/oda-",donor,".csv",sep=""),row.names=FALSE,na="")
}
#oof
setwd(wd)
oofwd <- paste(wd,"oof-donor",sep="/")
unlink(oofwd,recursive=TRUE)
dir.create(oofwd)
setwd(oofwd)
data <- read.csv(oofPath, header = TRUE,sep=",",na.strings="",check.names=TRUE,stringsAsFactors=FALSE)
keep <- c("id.from","id.to","year","value")
data <- ddply(data[keep],.(id.from,id.to,year),summarize,value=sum(value))
data <- data[order(data$id.from,data$id.to,data$year),]
donors <- unique(data$id.from)
donorKeep  <- c("id.to","year","value")
for(i in 1:length(donors)){
donor = donors[i]
donorData = data[which(data$id.from==donor),][donorKeep]
names(donorData)[names(donorData) == "id.to"] <- "id"
write.csv(donorData,paste(oofwd,"/oof-",donor,".csv",sep=""),row.names=FALSE,na="")
}
